//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using CrystalDecisions.CrystalReports.Engine;
using CrystalDecisions.ReportSource;
using CrystalDecisions.Shared;
using System;
using System.ComponentModel;



public class rptCoacherBarcode : ReportClass {
    
    public rptCoacherBarcode() {
    }
    
    public override string ResourceName {
        get {
            return "rptCoacherBarcode.rpt";
        }
        set {
            // Do nothing
        }
    }
    
    public override bool NewGenerator {
        get {
            return true;
        }
        set {
            // Do nothing
        }
    }
    
    public override string FullResourceName {
        get {
            return "rptCoacherBarcode.rpt";
        }
        set {
            // Do nothing
        }
    }
    
    [Browsable(false)]
    [DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public CrystalDecisions.CrystalReports.Engine.Section Section1 {
        get {
            return this.ReportDefinition.Sections[0];
        }
    }
    
    [Browsable(false)]
    [DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public CrystalDecisions.CrystalReports.Engine.Section Section2 {
        get {
            return this.ReportDefinition.Sections[1];
        }
    }
    
    [Browsable(false)]
    [DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public CrystalDecisions.CrystalReports.Engine.Section Section3 {
        get {
            return this.ReportDefinition.Sections[2];
        }
    }
    
    [Browsable(false)]
    [DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public CrystalDecisions.CrystalReports.Engine.Section Section4 {
        get {
            return this.ReportDefinition.Sections[3];
        }
    }
    
    [Browsable(false)]
    [DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public CrystalDecisions.CrystalReports.Engine.Section Section5 {
        get {
            return this.ReportDefinition.Sections[4];
        }
    }
}

[System.Drawing.ToolboxBitmapAttribute(typeof(CrystalDecisions.Shared.ExportOptions), "report.bmp")]
public class CachedrptCoacherBarcode : Component, ICachedReport {
    
    public CachedrptCoacherBarcode() {
    }
    
    [Browsable(false)]
    [DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public virtual bool IsCacheable {
        get {
            return true;
        }
        set {
            // 
        }
    }
    
    [Browsable(false)]
    [DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public virtual bool ShareDBLogonInfo {
        get {
            return false;
        }
        set {
            // 
        }
    }
    
    [Browsable(false)]
    [DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public virtual System.TimeSpan CacheTimeOut {
        get {
            return CachedReportConstants.DEFAULT_TIMEOUT;
        }
        set {
            // 
        }
    }
    
    public virtual CrystalDecisions.CrystalReports.Engine.ReportDocument CreateReport() {
        rptCoacherBarcode rpt = new rptCoacherBarcode();
        rpt.Site = this.Site;
        return rpt;
    }
    
    public virtual string GetCustomizedCacheKey(RequestContext request) {
        String key = null;
        // // The following is the code used to generate the default
        // // cache key for caching report jobs in the ASP.NET Cache.
        // // Feel free to modify this code to suit your needs.
        // // Returning key == null causes the default cache key to
        // // be generated.
        // 
        // key = RequestContext.BuildCompleteCacheKey(
        //     request,
        //     null,       // sReportFilename
        //     this.GetType(),
        //     this.ShareDBLogonInfo );
        return key;
    }
}
